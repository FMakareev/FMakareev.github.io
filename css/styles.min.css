@font-face{font-family:Beer money;src:url(../fonts/beermoney-400-normal.woff2) format("woff2"),url(../fonts/beermoney-400-normal.woff) format("woff"),url(../fonts/beermoney-400-normal.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:icons_team;src:url(../fonts/icons_team.eot?xgmff5);src:url(../fonts/icons_team.eot?xgmff5#iefix) format("embedded-opentype"),url(../fonts/icons_team.ttf?xgmff5) format("truetype"),url(../fonts/icons_team.woff?xgmff5) format("woff"),url(../fonts/icons_team.svg?xgmff5#icons_team) format("svg");font-weight:400;font-style:normal}[class*=" icon-"],[class^=icon-]{font-family:icons_team!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-location:before{padding-right:5px}.icon-location:before,.icon-map-marker:before,.icon-marker:before,.icon-pin:before{content:"\e900";color:#80868a}.icon-phone:before{content:"\e901";color:#80868a;padding-right:5px}.icon-envelope:before{content:"\e902";color:#80868a;padding-right:5px}.icon-vk:before{content:"\e903";color:#80868a;padding-right:5px}.icon-facebook:before{padding-right:5px}.icon-facebook-f:before,.icon-facebook:before{content:"\e904";color:#80868a}.icon-google-plus-square:before{content:"\e905";color:#80868a;padding-right:5px}.container:after,.container:before{content:" ";display:block;clear:both}*{box-sizing:border-box}body,html{width:100vw;height:100%;padding:0;margin:0;font:24px Beer money;text-align:center;text-transform:uppercase}a{text-decoration:none}p{margin:0}li{list-style:none}ul{padding:0}h1,h2,h3,ul{margin:0}h1{font-size:60px;margin:30px 0}.wrapper{width:100%;min-height:100%;overflow:hidden;position:relative}.container{width:calc(100vw - 160px);margin:0 auto}.main .project__list .project__item{height:200px;width:calc(25% - 30px);float:left;margin:15px;background-color:#ffd432;color:#fff}.main .project__list .project__top{background:#000;color:#fff;font-size:30px;padding:5px 0}.main .project__list .project__middle{height:93px}.main .project__list .project__middle .project__name{display:inline-block;vertical-align:middle}.main .project__list .project__middle:before{content:"";display:inline-block;vertical-align:middle;height:100%;width:0}.main .project__list .project__bottom{height:60px;position:relative}.main .project__list .project__bottom .project__number{font-size:40px;position:absolute;left:10px;line-height:60px}.main .project__list .project__bottom .project__tech{font-size:40px;position:absolute;right:10px;line-height:60px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
